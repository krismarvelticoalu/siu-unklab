generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userType {
  STUDENT
  TEACHER
}

model user {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  type         userType

  teacher teacher?
  student student?
}

model course {
  id          Int          @id @default(autoincrement())
  title       String
  credit      Int
  enrollments enrollment[]
}

model teacher {
  id          Int          @id @default(autoincrement())
  name        String
  user        user         @relation(fields: [userId], references: [id])
  enrollments enrollment[]
  userId      Int          @unique
}

model student {
  id          Int          @id @default(autoincrement())
  name        String
  user        user         @relation(fields: [userId], references: [id])
  enrollments enrollment[]
  userId      Int          @unique
}

model enrollment {
  studentId   Int
  courseId    Int
  teacherId   Int
  semester    String
  grade       Int?
  location    String
  timePeriod  String
  day         String
  student     student      @relation(fields: [studentId], references: [id])
  course      course       @relation(fields: [courseId], references: [id])
  teacher     teacher      @relation(fields: [teacherId], references: [id])
  attendances attendance[]

  @@id([studentId, courseId])
}

model attendance {
  date                DateTime
  wasPresent          Boolean
  wasLate             Boolean
  enrollment          enrollment @relation(fields: [enrollmentStudentId, enrollmentCourseId], references: [studentId, courseId])
  enrollmentStudentId Int
  enrollmentCourseId  Int

  @@id([enrollmentStudentId, enrollmentCourseId, date])
}
